Original Problem: https://leetcode.com/problems/binary-tree-paths/submissions/
257. Binary Tree Paths [EASY]
Given a binary tree, return all root-to-leaf paths.

<My Solution>
Runtime: 18 ms, faster than 6.69% of Java online submissions for Binary Tree Paths.
Memory Usage: 40.5 MB, less than 8.32% of Java online submissions for Binary Tree Paths.class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        
        List<String> li = new ArrayList();

        if(root==null){
            return li;
        }
        String s = "";
        
        helper(root, s, li);
        
        
        
        return li;
        
    }
    
    
    public String helper(TreeNode root, String s, List<String> li){
        
        
       if(s.equals("")){
           s+=root.val;
       } else{
           s=s+"->"+root.val;
       }
        
       if(root.left==null && root.right==null){
            li.add(s);
            s="";
        } 
        
        else{
            if(root.left!=null){
                helper(root.left, s,li);
            } 
        
            if(root.right!=null){
                helper(root.right, s,li);
            } 
        
        }
        
        return s;

        

        
        
    }
        
    }
